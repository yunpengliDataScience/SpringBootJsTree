-- Root table: LV1_SYMB (1 column + id)
CREATE TABLE LV1_SYMB (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255),
    level VARCHAR(255),
    field1 VARCHAR(255)
);

-- Child table: LV2_SYMB (2 columns + id)
CREATE TABLE LV2_SYMB (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    lv1_id BIGINT,  -- FK to LV1_SYMB
    name VARCHAR(255),
    level VARCHAR(255),
    field1 VARCHAR(255),
    field2 VARCHAR(255),
    CONSTRAINT fk_lv2_lv1 FOREIGN KEY (lv1_id) REFERENCES LV1_SYMB(id)
);

-- Child table: LV3_SYMB (3 columns + id)
CREATE TABLE LV3_SYMB (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    lv2_id BIGINT,  -- FK to LV2_SYMB
    name VARCHAR(255),
    level VARCHAR(255),
    field1 VARCHAR(255),
    field2 VARCHAR(255),
    field3 VARCHAR(255),
    CONSTRAINT fk_lv3_lv2 FOREIGN KEY (lv2_id) REFERENCES LV2_SYMB(id)
);

-- Child table: LV4_SYMB (4 columns + id)
CREATE TABLE LV4_SYMB (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
    lv3_id BIGINT,  -- FK to LV3_SYMB
    name VARCHAR(255),
    level VARCHAR(255),
    field1 VARCHAR(255),
    field2 VARCHAR(255),
    field3 VARCHAR(255),
    field4 VARCHAR(255),
    CONSTRAINT fk_lv4_lv3 FOREIGN KEY (lv3_id) REFERENCES LV3_SYMB(id)
);

CREATE TABLE JSON_AUDIT_TRAIL (
   id BIGINT generated by default as identity,
   json_content CLOB,
   action VARCHAR(255),
   user_name VARCHAR(255),
   timestamp TIMESTAMP,
   PRIMARY KEY (id)
);

CREATE TABLE CHANGE_REQUEST_SANDBOX (
    ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    JSON_CONTENT CLOB,
    SUMMARIZED_JSON_CONTENT CLOB,
    USER_NAME  VARCHAR(255),
    TIMESTAMP  TIMESTAMP,
    STATUS  VARCHAR(50)
);

CREATE TABLE CHANGE_LOG (
    id BIGINT PRIMARY KEY AUTO_INCREMENT,
	change_request_id BIGINT NOT NULL,  -- Change Request Id
    table_name VARCHAR(255) NOT NULL,   -- Which table was changed
    entity_id BIGINT NOT NULL,          -- Primary key of the affected record

    operation_type VARCHAR(50) NOT NULL, -- INSERT, UPDATE, DELETE
    column_name VARCHAR(255),            -- Column that changed (null for inserts/deletes if you want whole record snapshot)

    old_value VARCHAR(2000),             -- Value before change
    new_value VARCHAR(2000),             -- Value after change

    changed_by VARCHAR(255),             -- User who made the change
    changed_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP -- When change happened
);
